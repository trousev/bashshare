#!/bin/bash
mkdir -p ~/.share
mkdir -p ~/Share
um=false
if [ $1. == "-." ]; then
  um=true
  shift
fi

if [ $1. == . ]; then
    echo "This is DEPRECATED WAY! Please, use SSHP instead"
    echo Welcome to ssh-share!
    read -p "SSH server: " server
    read -p "Username: " Uusername
    stty -echo
    read -p "Password: " Ppassword
    stty echo;
    read -p "Remote path: " share_name
    d_config=$Uusername@$server
    read -p "Local name ($d_config): " config
    if [ $config. == . ]; then config=$d_config; fi
    d_port=22
    read -p "Port ($d_port): " port
    if [ $port. == . ]; then port=$d_port; fi
    
    echo type=ssh > ~/.share/$config
    echo _USERNAME=$Uusername >> ~/.share/$config
    echo _PASSWORD=$Ppassword >> ~/.share/$config
    echo _HOSTNAME=$server   >> ~/.share/$config
    echo _SHARNAME=$share_name >> ~/.share/$config
    echo _LOCALNAME=$config >> ~/.share/$config
    echo _PORT=$port >> ~/.share/$config
    echo Share created
    
    ln -s $config ~/.share/$config.passworded-ssh
else
    if [ -f ~/.share/$1 ]; then
      source ~/.share/$1
      mkdir -p ~/Share/$_LOCALNAME
      if [ $_PORT. == "." ]; then
        _PORT=22
      fi
      fusermount -u ~/Share/$_LOCALNAME 1> /dev/null 2> /dev/null
      if [ $um != true ]; then
        echo $_PASSWORD | sshfs $_USERNAME@$_HOSTNAME:$_SHARNAME ~/Share/$_LOCALNAME -p $_PORT -o password_stdin,reconnect,idmap=user,transform_symlinks,allow_root
      fi
    else
      echo No config: $1
      echo Aviable configurations:
      ls ~/.share
    fi
fi
